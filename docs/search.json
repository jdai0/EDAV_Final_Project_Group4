[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EDAV Group 4: Shadows in the City – Analyzing NYPD Arrest Data to Illuminate Crime Patterns in NYC",
    "section": "",
    "text": "1 Introduction\nOn November 8th, a man opened fire on an NYC subway, shooting the victim in the legs. The incident happened on the Upper West, not far from where we lived. Just 10 days later, three people were killed in random stabbing spree. The murderer, covered in blood, walked freely in the bustling streets in Manhattan before being arrested.\nWe live in a city that riffles with opportunities and danger at the same time. As data science students in NYC, both our own safety and the community we share are deeply intertwined with issues of public safety. In this project, we attempt to conduct an Exploratory Data Analysis (EDA) on crimes in NYC as our means to raise awareness and contribute to the community.\nWe identified NYPD Arrest Data as our main data source, which includes information such as the type of crime, location, time, and suspect demographics. Although many crimes are deep-rooted, requiring massive investment and sacrifices to address, EDA could still yield valuable insight. By exploring social-economic correlations behind crimes, EDA could serve as a fundamental step for interventions and policy changes."
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nFor this project, the dataset we used is NYPD_Arrest_Data_Year_to_Date_.csv, which provides detailed records of arrests made by the New York City Police Department (NYPD) within the current year, specifically from 2024/01/01 to 2024/09/30. Each record includes information such as the type of crime, location, time, and suspect demographics, offering an opportunity to analyze trends in police enforcement activity.\n\nData Collection and Updates:\n\nOriginally collected and maintained by the NYPD, extracted and reviewed by the Office of Management Analysis and Planning (OMAP), the primary evaluation and assessment arm and “think tank” of NYPD.\nUpdated quarterly.\n\nFormat and Dimensions:\n\nThe dataset is in CSV format.\nIt includes fields such as the arrest date, type and level of crime, location coordinates, and demographic details (e.g., age, race, sex).\n\nIssues/Problems:\n\nMissing values in certain fields due to historical changes in data collection forms or unavailable information at the time of reporting.\nGeo location data may not be accurate: data on certain arrests (e.g., those on moving trains or in parks) is approximated to nearby coordinates, and those arrests who were not able to be geo-coded have been located as occurring at the police station house within the precinct of occurrence.\nSome arrests do not have a specific law codes due to the huge amount of laws, so some records are categorized under generic or broad law codes (e.g., “LOC00000UM”).\nTranscription errors may result in inconsistencies in nominal data.\n\nData Import & Source:\n\nThe data was collected from NYPD Arrest Data (Year to Date) on Data.Gov (https://catalog.data.gov/dataset/nypd-arrest-data-year-to-date), which is a national open data platform that provides access to datasets published by agencies across the government.\nAs mentioned before, the dataset was actually rearranged and extracted from the original data & report from NYPD, but the original data is not publicly available by NYPD.\nConsidering that the data source Data.Gov is an official government data website, we have reason to believe in the authenticity and accuracy of the data."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\nWe first take a look at what does the data look like and its structure:\n\n\nWe found that the raw dataset contains 195447 obs (rows) of 19 variables (cols), with more detailed variable information provided in the source website:\n\n\nARREST_KEY: Randomly generated persistent ID for each arrest\nARREST_DATE: Exact date of arrest for the reported event\nPD_CD: Three digit internal classification code (more granular than Key Code)\nPD_DESC: Description of internal classification corresponding with PD code (more granular than Offense Description)\nKY_CD: Three digit internal classification code (more general category than PD code)\nOFNS_DESC: Description of internal classification corresponding with KY code (more general category than PD description)\nLAW_CODE: Law code charges corresponding to the NYS Penal Law, VTL and other various local laws\nLAW_CAT_CD: Level of offense: felony, misdemeanor, violation\nARREST_BORO: Borough of arrest. B(Bronx), S(Staten Island), K(Brooklyn), M(Manhattan), Q(Queens)\nARREST_PRECINCT: Precinct where the arrest occurred\nJURISDICTION_CODE: Jurisdiction responsible for arrest. Jurisdiction codes 0(Patrol), 1(Transit) and 2(Housing) represent NYPD whilst codes 3 and more represent non NYPD jurisdictions\nAGE_GROUP: Perpetrator’s age within a category\nPERP_SEX: Perpetrator’s sex description\nPERP_RACE: Perpetrator’s race description\nX_COORD_CD: Midblock X-coordinate for New York State Plane Coordinate System, Long Island Zone, NAD 83, units feet (FIPS 3104)\nY_COORD_CD: Midblock Y-coordinate for New York State Plane Coordinate System, Long Island Zone, NAD 83, units feet (FIPS 3104)\nLatitude: Latitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)\nLongitude: Longitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)\nNew.Georeferenced.Column: Point coordinate in the form of (Longitude, Latitude)\n\n\nNow we investigate missing values:\n\n\n\nCode\nprint(missing_table)\n\n\n  Variable Missing_Count\n1    KY_CD            26\n2    PD_CD             6\n\n\n\nWe can see that most columns do not contain missing values, except for KY_CD and PD_CD, both of which are 3 digit internal classification code to categorize the type of the arrest, but the missing values only count for a tiny portion of the whole dataset.\nWe can then visualize the missing values using several graphs for clarity:\n\n\n\nCode\n# Filter for variables with missing values only\nmissing_summary_df$Missing_Proportion &lt;- missing_summary_df$Missing_Count / nrow(raw_data)\n\nmissing_summary_filtered &lt;- missing_summary_df |&gt;\n  filter(Missing_Proportion &gt; 0)\n\n# Horizontal bar plot for variables with missing values\nggplot(missing_summary_filtered, aes(x = reorder(Variable, -Missing_Proportion), y = Missing_Proportion)) +\n  geom_bar(stat = \"identity\", fill = \"darkorange\") +\n  coord_flip() +\n  labs(title = \"Proportion of Missing Values (Filtered)\", \n       x = \"Variable\", y = \"Proportion of Missing Values\")+\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\nThis plot shows the proportion of missing values for variables that have missing data (PD_CD and KY_CD), highlighting that KY_CD has a slightly higher proportion of missing values compared to PD_CD, but both of which are extremely low overall.\n\n\n\nCode\n# use gg_miss_upset for UpSet graph\ngg_miss_upset(raw_data)\n\n\n\n\n\n\nThis UpSet Plot shows the intersection of missing values among the variables KY_CD and PD_CD: 6 records have missing values in both KY_CD and PD_CD; and KY_CD has 20 extra missing values in total.\nWe can also go further to investigate underlying pattern of missing values using other variables, e.g.: geographic location & demographic information.\n\n\n\nCode\nggplot(missing_by_boro, aes(x = ARREST_BORO, y = Missing_Rate)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Missing Rate by Borough\", x = \"Borough\", y = \"Missing Rate\")+\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nCode\nggplot(missing_by_demo, aes(x = AGE_GROUP, y = Missing_Rate, fill = PERP_SEX)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Missing Rate by Age and Sex\", x = \"Age Group\", y = \"Missing Rate\")+\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "data.html#data-cleaning",
    "href": "data.html#data-cleaning",
    "title": "2  Data",
    "section": "2.3 Data Cleaning",
    "text": "2.3 Data Cleaning\n\nThere seems to be some slight pattern underlying the missing values, especially when we consider the the age variable, but as we mentioned in section 2.1, these missing values may due to historical changes in data collection forms or unavailable information at the time of reporting. Also, considering the extremely small percentage of missing values, we choose to directly delete all rows with missing values.\n\n\n\nCode\n# Remove all rows with missing values\ndata &lt;- na.omit(raw_data)\n\n# Check the number of rows before and after removing missing values\ncat(\"Number of rows before cleaning:\", nrow(raw_data), \"\\n\")\n\n\nNumber of rows before cleaning: 195447 \n\n\nCode\ncat(\"Number of rows after removing missing values:\", nrow(data), \"\\n\")\n\n\nNumber of rows after removing missing values: 195421 \n\n\nCode\n# Verify the data no longer contains missing values\ncat(\"Number of missing values:\", sum(is.na(data)), \"\\n\")\n\n\nNumber of missing values: 0 \n\n\n\nFor further analysis and visualization purpose, there are some variables that we can remove from the dataset and will not cause any inconvenience. Here are the reasons:\n\n\nARREST_KEY\nThis is a randomly generated unique identifier for each record. It does not carry any analytical or statistical value and is irrelevant for data analysis or visualization.\nY_COORD_CD & X_COORD_CD\nThese variables represent geographic coordinates in the NAD 1983 system. Since the dataset already includes Latitude and Longitude (which are more universally understood and used), these fields are redundant and were removed.\nLAW_CODE\nThis variable contains detailed law codes, which have too many categories (1044 as seen from above) to be useful for most visualizations or analyses. Instead, the LAW_CAT_CD variable, which provides broader categories (felony, misdemeanor, violation), is more practical and will be used.\n\n\n\nCode\n# Remove unnecessary variables\ndata_cleaned &lt;- data |&gt;\n  select(-ARREST_KEY, -Y_COORD_CD, -X_COORD_CD, -LAW_CODE)\n\n\nWe then remove these variables:\n\n\nCode\ncat(\"Now there are:\", nrow(data_cleaned), \"rows and \", ncol(data_cleaned), \"columns. \\n\")\n\n\nNow there are: 195421 rows and  15 columns."
  },
  {
    "objectID": "results.html#what-are-the-most-common-types-of-arrests-in-nyc",
    "href": "results.html#what-are-the-most-common-types-of-arrests-in-nyc",
    "title": "3  Results",
    "section": "3.1 What are the most common types of arrests in NYC?",
    "text": "3.1 What are the most common types of arrests in NYC?\n\n\nCode\nggplot(data, aes(x = fct_rev(fct_infreq(OFNS_DESC)), fill = ..count..)) +\n  geom_bar(color = \"black\") +\n  coord_flip() +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  labs(\n    title = \"Arrest Types Distribution in NYC\",\n    x = \"Offense Type\",\n    y = \"Number of Arrests\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 5, angle = 15, hjust = 1),\n    plot.title = element_text(size = 13, hjust = 0.5, face = \"bold\")\n  )\n\n\n\n\n\nThe graph reveals that the most common arrest type in NYC is “Assault 3 & Related Offenses” (intentional or reckless infliction of physical injury to others), significantly outpacing other categories and reflecting the prevalence of physical altercations in NYC’s dynamic environment. Following closely are “Petit Larceny,” “Felony Assault,” and “Dangerous Drugs,” showcasing the focus on theft, violent crimes, and drug-related offenses. These categories underline both the economic pressures and social challenges in the city. Meanwhile, the steep drop-off after these top offenses suggests that law enforcement resources are primarily concentrated on addressing these recurring issues.\nInterestingly, offenses like “Fortune Telling” and “Parking Offenses” appear at the bottom, reminding us that arrests span from the mundane to the severe in this bustling metropolis."
  },
  {
    "objectID": "results.html#where-are-arrests-concentrated-in-nyc",
    "href": "results.html#where-are-arrests-concentrated-in-nyc",
    "title": "3  Results",
    "section": "3.2 Where are arrests concentrated in NYC?",
    "text": "3.2 Where are arrests concentrated in NYC?\n\n3.2.1 What does NYC look like?\nFirst we can take a quick look at the NYC boroughs geographical distribution:\n\n\nCode\nggplot(data = nyc_boroughs) +\n  geom_sf(aes(fill = boro_name), color = \"black\", lwd = 0.3) + \n  scale_fill_brewer(palette = \"Pastel1\", name = \"Borough\") +\n  labs(\n    title = \"New York City Boroughs\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, hjust = 0.5, face = \"bold\"),\n    axis.text = element_blank(),\n    axis.ticks = element_blank()\n  )\n\n\n\n\n\n\n\n3.2.2 Is there a pattern by Boroughs in NYC?\n\n\nCode\n# Download NYC shapefile data for boroughs\n# nyc_boroughs &lt;- st_read(\"https://data.cityofnewyork.us/api/geospatial/7t3b-ywvw?method=export&format=GeoJSON\")\n\n# Convert the `nyc_boroughs` object to a simple feature that Leaflet can understand\nnyc_boroughs &lt;- st_transform(nyc_boroughs, crs = 4326) # Ensure it uses WGS84 (Lat/Lon)\n\n# Create the interactive map\nleaflet(nyc_boroughs) %&gt;%\n  addTiles() %&gt;%  # Add base map tiles\n  addPolygons(\n    fillColor = ~colorFactor(\"Pastel1\", nyc_boroughs$boro_name)(boro_name),\n    fillOpacity = 0.7,\n    color = \"black\",\n    weight = 1,\n    popup = ~paste(\"&lt;b&gt;Borough:&lt;/b&gt;\", boro_name)\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorFactor(\"Pastel1\", nyc_boroughs$boro_name),\n    values = ~boro_name,\n    title = \"Borough\"\n  )\n\n\n\n\n\n\n\n\nCode\nggplot() +\n  geom_sf(data = nyc_boroughs, aes(fill = boro_name), alpha = 0.8, \n          color = \"white\", size = 0.4) +\n  geom_point(data = data_geo, aes(x = Longitude, y = Latitude), \n             color = \"darkgreen\", alpha = 0.45, size = 0.25) +\n  labs(\n    title = \"Arrest Locations in NYC with Borough Boundaries\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Borough\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, hjust = 0.5, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 16),\n    legend.text = element_text(size = 12),\n    axis.text.x = element_text(size = 12, angle = 30, hjust = 1),\n    axis.text.y = element_text(size = 12),\n    axis.title.x = element_text(size = 16, face = \"bold\"), \n    axis.title.y = element_text(size = 16, face = \"bold\"),\n    plot.margin = margin(t = 2, r = 5, b = 2, l = 5)\n  ) +\n  coord_sf(xlim = c(-74.25, -73.7), ylim = c(40.5, 40.92), expand = FALSE)\n\n\n\n\n\n\n\n3.2.3 Arrest Density Distribution\n\n\nCode\ndata_geo &lt;- data_geo %&gt;%\n  mutate(ARREST_BORO = recode(ARREST_BORO, \n                              \"B\" = \"Bronx\",\n                              \"K\" = \"Brooklyn\",\n                              \"M\" = \"Manhattan\",\n                              \"Q\" = \"Queens\",\n                              \"S\" = \"Staten Island\"))\ndata_geo$ARREST_BORO &lt;- as.factor(data_geo$ARREST_BORO)\n\nggplot() +\n  geom_sf(data = nyc_boroughs, aes(fill = boro_name),\n          alpha = 0.8, color = \"white\", size = 0.4) +\n  geom_point(data = data_geo, aes(x = Longitude, y = Latitude), color = \"darkgreen\",\n             alpha = 0.25, size = 0.05) +\n  facet_wrap(~ ARREST_BORO,nrow=3) +\n  labs(\n    title = \"Arrest Locations in NYC Faceted by Borough\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Borough\",\n    color = \"Arrest Borough\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, hjust = 0.5, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 16),\n    legend.text = element_text(size = 12),\n    panel.spacing = unit(1, \"lines\"),\n    axis.text.x = element_text(size = 12, angle = 30, hjust = 1),\n    axis.text.y = element_text(size = 12),\n    axis.title.x = element_text(size = 16, face = \"bold\"), \n    axis.title.y = element_text(size = 16, face = \"bold\"),\n    strip.text = element_text(size = 12, face = \"bold\"),\n    plot.margin = margin(t = 5, r = 3, b = 5, l = 3)\n  ) +\n  coord_sf(xlim = c(-74.25, -73.7), ylim = c(40.5, 40.92), expand = FALSE)\n\n\n\n\n\n\n\nCode\nggplot(data_geo, aes(x = Longitude, y = Latitude)) +\n  stat_density2d(aes(fill = ..density..), geom = \"raster\", contour = FALSE, alpha = 0.8) +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkred\", name = \"Density\") +\n  labs(\n    title = \"Geographical Concentration of Arrests in NYC\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 13, hjust = 0.5, face = \"bold\"),\n    axis.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n`summarise()` has grouped output by 'Longitude'. You can override using the\n`.groups` argument.\n\n\nYou can find more info if you zoom in. Give it a try!\n\n\nCode\nleaflet(data_geo) %&gt;%\n  addTiles() %&gt;%\n  setView(lng = -73.95, lat = 40.7, zoom = 10) %&gt;%\n  addHeatmap(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    intensity = ~Offense_Count,\n    blur = 10,\n    max = 0.1,\n    radius = 15,\n    minOpacity = 0.01,\n    gradient = c(\"0.0\" = \"blue\", \"0.3\" = \"skyblue\", \"0.5\" = \"lightyellow\", \"0.7\" = \"yellow\", \"0.9\" = \"orange\", \"1\" = \"red\")\n  )%&gt;%\n  addLabelOnlyMarkers(lng = -74.0, lat = 40.7, label = \"NYC Arrest Density\", labelOptions = labelOptions(noHide = TRUE))\n\n\n\n\n\n\nThe static & interactive heatmap vividly highlights the geographical concentration of arrests in NYC. Notably, Manhattan and parts of Brooklyn exhibit intense activity, potentially due to their dense population, high foot traffic, and major commercial hubs. Interestingly, while Staten Island and Queens display comparatively sparse activity, localized clusters suggest targeted incidents or police operations.\nThe absence of blue (low-density) areas even when zoomed in highlights a significant insight: arrests are overwhelmingly concentrated, reflecting either systemic patterns of crime or a strong bias in enforcement in hotspot zones. These findings not only underline the uneven geographical distribution of arrests but also raise critical questions about how social, economic, and law enforcement factors contribute to these patterns.\n\n\n3.2.4 TBD: possibly add location of NYPD to compare?"
  },
  {
    "objectID": "results.html#what-is-the-demographic-profile-of-suspects",
    "href": "results.html#what-is-the-demographic-profile-of-suspects",
    "title": "3  Results",
    "section": "3.3 What is the demographic profile of suspects?",
    "text": "3.3 What is the demographic profile of suspects?\n\n3.3.1 AGE GROUP & Race Distribution\n\n\nCode\nage_group_colors &lt;- brewer.pal(n = 5, name = \"Pastel2\")  \nrace_colors &lt;- brewer.pal(n = 7, name = \"Pastel1\")       \n\n# AGE_GROUP Pie Chart\nage_group_plot &lt;- data_demo %&gt;%\n  count(AGE_GROUP) %&gt;%\n  mutate(percentage = n / sum(n) * 100) %&gt;%  \n  ggplot(aes(x = \"\", y = n, fill = AGE_GROUP)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = ifelse(percentage &gt; 2, \n                        paste0(round(percentage, 1), \"%\"), \"\")), \n            position = position_stack(vjust = 0.5), size = 5.5) + \n  scale_fill_manual(values = age_group_colors) +\n  labs(title = \"Age Group Distribution\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 24, face = \"bold\", hjust = 0.5),\n    legend.title = element_blank(),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 13, face = \"bold\", hjust = 0.5),\n    plot.margin = margin(t = 5, r = 5, b = 5, l = 5)\n  )\n\n# PERP_RACE Pie Chart\nrace_counts_plot &lt;- data_demo %&gt;%\n  count(PERP_RACE) %&gt;%\n  mutate(percentage = n / sum(n) * 100) %&gt;%  \n  ggplot(aes(x = \"\", y = n, fill = PERP_RACE)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = ifelse(percentage &gt; 2, \n                        paste0(round(percentage, 1), \"%\"), \"\")),  \n            position = position_stack(vjust = 0.5), size = 5.5) + \n  scale_fill_manual(values = race_colors) +\n  labs(\n    title = \"Race Distribution\",\n    fill = \"Race\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 24, face = \"bold\", hjust = 0.5),\n    legend.title = element_blank(),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 11, face = \"bold\", hjust = 0.5),\n    plot.margin = margin(t = 5, r = 5, b = 5, l = 0)\n  )\n\nage_group_plot + race_counts_plot + plot_layout(ncol = 2)\n\n\n\n\n\nAge Group Distribution:\n\nThe 25-44 age group dominates with 58.1% of all arrests, followed by the 45-64 age group (19.4%).\nYounger suspects (&lt;18) and older suspects (65+) form a small minority of the total arrests, contributing 3.7% and 17%, respectively.\n\nRace Distribution:\n\nArrests show notable disparities across racial groups. 46.6% of arrests involve Black individuals, while White individuals account for 26.7%, followed by White Hispanic (10.2%) and Black Hispanic (10%) individuals.\n\n\n\nSmaller racial groups, such as Asian/Pacific Islander and American Indian/Alaskan Native, contribute marginally to the total.\n\n\n\n3.3.2 Is there a pattern for Perpetrators’ Gender and Race?\n\n\nCode\nggplot(data_demo, aes(x = PERP_RACE, fill = PERP_SEX)) +\n  geom_bar(position = position_dodge(width = 0.9), width = 0.8) +\n  geom_text(\n    stat = \"count\", \n    aes(label = ..count..), \n    position = position_dodge(width = 0.9), \n    vjust = -0.5, size = 4\n  ) +\n  scale_fill_manual(\n    values = c(\"#006400\", \"#FFA500\"), \n    labels = c(\"Male\", \"Female\")\n  ) +\n  labs(\n    title = \"Demographic Profile of Suspects in NYC\",\n    x = \"Race\",\n    y = \"Number of Arrests\",\n    fill = \"Gender\"\n  ) +\n  scale_y_continuous(breaks = seq(0, 80000, by = 10000)) +\n  theme_light() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(size = 14, angle = 60, hjust = 1),\n    axis.text.y = element_text(size = 14),\n    axis.title = element_text(size = 16, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 16, face = \"bold\"),\n    legend.text = element_text(size = 14),\n    panel.grid.major = element_line(linewidth = 0.5),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(t = 5, r = 5, b = 5, l = 5)\n  )\n\n\n\n\n\nGender and Race Interactions:\n\nMale suspects consistently outnumber female suspects across all racial groups.\nAmong Black suspects, the gender difference is particularly pronounced, with significantly more arrests involving males than females.\nWhite and Hispanic groups exhibit smaller gender disparities, but males still constitute the majority.\n\n\n\n3.3.3 What if we add Age Group?\n\n\nCode\nggplot(data_demo, aes(x = PERP_RACE, fill = PERP_SEX)) +\n  geom_bar(position = \"stack\", width = 0.7) +\n  geom_text(\n    stat = \"count\", \n    aes(label = ifelse(..count.. &lt; 200, \"\", ..count..)), \n    position = position_stack(vjust = 0.5), \n    size = 3.5,\n    color = \"black\"\n  ) +\n  facet_wrap(~ AGE_GROUP, ncol = 1, scales = \"free_y\") + \n  labs(\n    title = \"Demographic Profile of Suspects by Age Group\",\n    x = \"Race\",\n    y = \"Number of Arrests (Values &lt; 200 not labeled)\",\n    fill = \"Gender\"\n  ) +\n  scale_fill_manual(\n    values = c(\"skyblue\", \"lightpink\"),\n    labels = c(\"Male\", \"Female\")\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(size = 12, angle = 60, hjust = 1),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14, face = \"bold\"),\n    legend.title = element_text(size = 14, face = \"bold\"),\n    legend.text = element_text(size = 12),\n    plot.margin = margin(t = 5, r = 5, b = 5, l = 5),\n    strip.text = element_text(size = 14, face = \"bold\")\n  )\n\n\n\n\n\nAge and Race Dynamics:\n\nRace & Gender Distributions for each age group are surprisingly similar (nearly the same).\nAcross all age groups, Black individuals are notably represented, particularly in the 25-44 age group, where arrests peak.\n\n\n\nOlder age groups (45-64 and 65+) show a gradual narrowing of gender gaps."
  },
  {
    "objectID": "results.html#how-do-arrests-vary-by-time-of-year",
    "href": "results.html#how-do-arrests-vary-by-time-of-year",
    "title": "3  Results",
    "section": "3.4 How do arrests vary by time of year?",
    "text": "3.4 How do arrests vary by time of year?\n\n3.4.1 Monthly pattern\n\n\nCode\nggplot(monthly_arrests, aes(x = Month, y = n, fill = Month)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = custom_colors) +\n  labs(\n    title = \"Monthly Distribution of Arrests\",\n    x = \"Month\",\n    y = \"Number of Arrests\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\nThe bar chart demonstrates that arrests are distributed almost uniformly across the first nine months of 2024, with no significant seasonal variation. This consistency might indicate stable law enforcement activity or consistent crime patterns throughout the year.\n\n\n\n3.4.2 Weekly Pattern\nTo find out more granular information, we can look at the weekday data:\n\n\nCode\nggplot(daily_data, aes(x = Weekday, y = Count, fill = Weekday)) +\n  geom_boxplot() +\n  labs(title = \"Arrests by Weekday\",\n       x = \"Weekday\",\n       y = \"Number of Arrests\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    axis.text.x = element_text(size = 12, angle = 30, hjust = 1),\n    axis.text.y = element_text(size = 12),\n    legend.position = \"none\"\n  )\n\n\n\n\n\nThe boxplot reveals significant variations in arrest counts by weekday:\n\nArrests peak on Wednesdays and Thursdays and then gradually decrease, reaching their lowest on Sundays.\nSuch pattern seems to be counter-intuitive: since weekends typically see more public activities and gatherings, which could increase opportunities for certain crimes.\nThe lower arrest numbers on weekends might instead reflect reduced law enforcement activity or reporting delays, and such trend may continue till Monday.\nConversely, the midweek peaks could be tied to targeted enforcement operations or routine patrols that are more active during weekdays.\n\n\n\n3.4.3 Daily Pattern\nTo dive deeper, we can also explore in a daily manner.\n\n\nCode\nggplot(daily_data, aes(x = ARREST_DATE)) +\n  # Line for daily counts\n  geom_line(aes(y = Count, color = \"Daily Count\"), size = 0.4) +  \n  # Smooth trendline\n  geom_smooth(aes(y = Count, color = \"Trendline\"), method = \"loess\", \n              formula = y ~ x, span = 0.3, size = 1, se = FALSE) + \n  # Rolling average line\n  geom_line(aes(y = Rolling_Avg, color = \"7-Day Rolling Avg\"), size = 1) +\n  # Highlight high and low points\n  geom_point(data = filter(daily_data, Count &gt; quantile(Count, 0.9)), \n             aes(y = Count, color = \"Top 10%\"), size = 2) +\n  geom_point(data = filter(daily_data, Count &lt; quantile(Count, 0.1)), \n             aes(y = Count, color = \"Bottom 10%\"), size = 2) +\n  # Define colors and labels for legend\n  scale_color_manual(\n    name = \"Legend\",  \n    values = c(\n      \"Daily Count\" = \"black\",\n      \"Trendline\" = \"orange\",\n      \"7-Day Rolling Avg\" = \"green\",\n      \"Top 10%\" = \"red\",\n      \"Bottom 10%\" = \"blue\"\n    )\n  ) +\n  scale_x_date(\n    date_breaks = \"1 month\",  \n    date_labels = \"%Y-%m\"     \n  ) +\n  labs(\n    title = \"Daily Arrests Pattern\",\n    x = \"Date\",\n    y = \"Number of Arrests\"\n  ) +\n  theme_light() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10, angle = 45, hjust = 1),\n    legend.position = \"bottom\",  \n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\nThis graph takes us on a journey through daily arrests in 2024, revealing intriguing patterns and seemingly regular extreme values.\n\nThe Black Line (Daily Count): Captures the raw, day-to-day pulse of arrests, showing dramatic spikes and dips that hint at the impact of events, enforcement strategies, or even social behavior.\nThe Orange Line (Trendline): A smoothed path that whispers the bigger picture—arrests started strong but trended downward as the year progressed. Could this reflect changing crime rates, seasonal effects, or something more unexpected?\nThe Green Line (7-Day Rolling Average): Smoothing out the chaos, this line unveils weekly rhythms in arrest patterns, helping us spot recurring cycles that would otherwise be lost in the noise. (recall what we just got in the weekly analysis, which matches what we get here!)\nThe Red Dots (Top 10% Days): These mark the “what-happened-there” moments—days with exceptionally high arrests. Were these driven by large-scale events, policy shifts, or targeted crackdowns? They beg for a deeper dive.\nThe Blue Dots (Bottom 10% Days): On the flip side, these quieter days suggest reduced activity, possibly tied to weekends, holidays, or other lulls in enforcement.\n\nThis layered visualization doesn’t just show the data—it sparks curiosity. What caused those peaks? Why the downward trend?\nLet’s explore it now:\n\n\nCode\n# Plot with corrected weekday order and consistent colors\nggplot(extreme_days, aes(x = Weekday, fill = Category)) +\n  geom_bar(position = \"dodge\", aes(y = ..count..)) +\n  scale_fill_manual(values = colors, name = \"Category\") +\n  labs(\n    title = \"Weekday Distribution of Extreme Arrest Days\",\n    x = \"Weekday\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\nThe distribution reveals a clear distinction in the patterns of extreme arrest days (top 10% and bottom 10%) across the week. The bottom 10% arrest days are highly concentrated on weekends, especially Sundays. Conversely, top 10% arrest days peak sharply on Wednesdays and Thursdays, indicating potentially heightened law enforcement operations or higher crime incidences during mid-week. This corresponds with our previous findings!\nSuch discrepancy raises questions about the operational dynamics of law enforcement or socio-economic activities driving crime during these days.\n\n\nCode\n# Plot with distinct legends for smoothing lines and bar colors\nggplot(extreme_days_summary, aes(x = Month, y = Count)) +\n  geom_bar(aes(fill = Category), stat = \"identity\", position = \"dodge\") +\n  geom_smooth(\n    data = extreme_days_summary %&gt;% filter(Category == \"Bottom 10%\"),\n    aes(x = as.numeric(Month), y = Count, color = \"Bottom 10%\"),\n    formula = y ~ x, method = \"loess\", se = FALSE, span = 0.5, size = 1\n  ) +\n  geom_smooth(\n    data = extreme_days_summary %&gt;% filter(Category == \"Top 10%\"),\n    aes(x = as.numeric(Month), y = Count, color = \"Top 10%\"),\n    formula = y ~ x, method = \"loess\", se = FALSE, span = 0.5, size = 1\n  ) +\n  scale_fill_manual(\n    values = c(\"Bottom 10%\" = \"blue\", \"Top 10%\" = \"red\"),\n    name = \"Bar Category\"\n  ) +\n  scale_color_manual(\n    values = c(\"Bottom 10%\" = \"skyblue\", \"Top 10%\" = \"violet\"),\n    name = \"Smoothing Line\"\n  ) +\n  labs(\n    title = \"Monthly Distribution of Extreme Arrest Days\",\n    x = \"Month\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10, angle = 45, hjust = 1),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\nThe top 10% arrest days exhibit a cyclical trend, with clear peaks around February and May-June, followed by noticeable dips in other months. This cyclicality may correspond to factors such as seasonal events, weather patterns, or heightened social activities that influence crime rates or arrests during these months.\nOn the other hand, the bottom 10% arrest days peak in January, March-April, and September, potentially aligning with quieter periods in terms of both criminal activity and law enforcement engagement. The dip in the middle of the year (particularly June) might reflect increased law enforcement activity focused on handling higher crime rates, leaving fewer “low arrest” days.\nIndeed, from the previous monthly pattern analysis, there seem to be slight variations for number of arrests across 2024’s first 9 months, but from the plot we just got, we can possibly deduce that there may be at least some pattern for the number of arrest peak vs. valley days!"
  },
  {
    "objectID": "results.html#what-are-the-relationships-between-precincts-and-offense-types",
    "href": "results.html#what-are-the-relationships-between-precincts-and-offense-types",
    "title": "3  Results",
    "section": "3.5 What are the relationships between precincts and offense types?",
    "text": "3.5 What are the relationships between precincts and offense types?\n\n\nCode\n# Create a heatmap for precincts and offense types\n\n# Aggregate data\nprecinct_offense &lt;- data %&gt;%\n  count(ARREST_PRECINCT, OFNS_DESC) %&gt;%\n  spread(key = OFNS_DESC, value = n, fill = 0)\n\n# Convert to matrix and plot heatmap\nheatmap_data &lt;- as.matrix(precinct_offense[, -1])\nrownames(heatmap_data) &lt;- precinct_offense$ARREST_PRECINCT\n\nheatmap(heatmap_data, scale = \"row\", Colv = NA, Rowv = NA,\n        col = colorRampPalette(c(\"white\", \"red\"))(100),\n        main = \"Heatmap of Precincts and Offense Types\")\n\n\n\n\n\nThe heatmap shows precinct-level variations in arrests by offense type. Certain precincts are more associated with specific crimes, reflecting local enforcement needs or crime trends."
  },
  {
    "objectID": "results.html#what-are-the-relationships-between-precincts-offense-types-and-law-code",
    "href": "results.html#what-are-the-relationships-between-precincts-offense-types-and-law-code",
    "title": "3  Results",
    "section": "3.5 What are the relationships between precincts, offense types, and law code?",
    "text": "3.5 What are the relationships between precincts, offense types, and law code?\n\n\nCode\n# Create a heatmap for precincts and offense types\n\n# Aggregate data\nprecinct_offense &lt;- data %&gt;%\n  count(ARREST_PRECINCT, OFNS_DESC) %&gt;%\n  spread(key = OFNS_DESC, value = n, fill = 0)\n\n# Convert to matrix and plot heatmap\nheatmap_data &lt;- as.matrix(precinct_offense[, -1])\nrownames(heatmap_data) &lt;- precinct_offense$ARREST_PRECINCT\n\nheatmap(heatmap_data, scale = \"row\", Colv = NA, Rowv = NA,\n        col = colorRampPalette(c(\"white\", \"red\"))(100),\n        main = \"Heatmap of Precincts and Offense Types\")\n\n\n\n\n\n\n3.5.1 TBD"
  }
]